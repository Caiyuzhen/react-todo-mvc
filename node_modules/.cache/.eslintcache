[{"/Users/zen/Desktop/react-todo-mvc/src/index.js":"1","/Users/zen/Desktop/react-todo-mvc/src/App.js":"2"},{"size":194,"mtime":1646127857000,"results":"3","hashOfConfig":"4"},{"size":2592,"mtime":1654277683161,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1599ymq",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/zen/Desktop/react-todo-mvc/src/index.js",[],[],"/Users/zen/Desktop/react-todo-mvc/src/App.js",["13","14","15"],[],"import { Button, Input, Table, Space, Popconfirm } from 'antd'\nimport React from 'react'\nimport './App.css'\nimport axios from 'axios'\n\nconst { Search } = Input //从 input 中【🌟🌟解构】并获取 Search 组件\n\n//思路：\n//1.找到对应的组件，搭建基本【布局结构（无数据状态）】\n//2.渲染基础的 table ：【发起请求（需要提前 Mock 数据）】 (componentDidMount) -> 【拿到数据】 -> 【交给 List】(this.setState)\n//3.写具体的业务逻辑，增删改查\n\n\n//类组件内不能用 const、let，来定义变量，直接定义就好了\n\nclass App extends React.Component {\n  state = {\n    //表格数据\n    list: [],\n    //定义【每一列】要展示的数据结构,通常会把 【dataIndex】 跟 【key】 写成一样的\n    columns: [\n      {\n        title: '任务编号',\n        dataIndex: 'id',//编号 （对应的就是 json 的数据结构！）\n        key: 'id',\n      },\n      {\n        title: '任务名称',\n        dataIndex: 'name',//名称 （对应的就是 json 的数据结构！）\n        key: 'name',\n      },\n      {\n        title: '任务描述',\n        dataIndex: 'des',//描述 （对应的就是 json 的数据结构！）\n        key: 'des',\n      },\n      {\n        title: '操作',\n        dataIndex: 'do',//操作 （对应的就是 json 的数据结构！此案例没有）\n        key: 'do',\n      },\n    ]\n  }\n\n  // 搜索\n  onSearch = (inputValue) => {\n    console.log(inputValue);\n  };\n\n\n  // 删除\n\n\n  //🌟🌟 定义加载列表的函数\n  loadList = async () => {\n    const res = await axios.get('http://localhost:3001/data')\n    console.log(res);\n\n    //🌟 把拿到的数据存到 state 的 list 内, 因为下面 render 内有调用 state.list\n    this.setState({\n      list: res.data\n    })\n  }\n\n\n\n  //🌟🌟 找到合适的【生命周期函数】,发送请求\n  componentDidMount () {\n    // 发送接口请求\n    this.loadList()\n  }\n\n\n  render () {\n    return (\n      <div className=\"container\">\n        {/* <Button type='primary'>按钮</Button> */}\n\n        {/* 搜索框，点击搜索图标、清除图标，或按下回车键时的回调，回调的 value 是当前输入框的值 */}\n        <Search\n          placeholder=\"input search text\"\n          allowClear\n          enterButton=\"Search\"\n          size=\"large\"\n          onSearch={this.onSearch}\n        />\n        <Table\n          //表格列数据\n          dataSource={this.state.list}\n          //表头数据\n          columns={this.state.columns} \n        />;\n      </div>\n    )\n  }\n}\n\nexport default App\n",{"ruleId":"16","severity":1,"message":"17","line":1,"column":10,"nodeType":"18","messageId":"19","endLine":1,"endColumn":16},{"ruleId":"16","severity":1,"message":"20","line":1,"column":32,"nodeType":"18","messageId":"19","endLine":1,"endColumn":37},{"ruleId":"16","severity":1,"message":"21","line":1,"column":39,"nodeType":"18","messageId":"19","endLine":1,"endColumn":49},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","'Popconfirm' is defined but never used."]